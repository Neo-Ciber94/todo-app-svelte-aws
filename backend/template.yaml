AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: A todo app using Svelte and AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst

Parameters:
  Stage:
    Type: String
    Description: The application stage
    Default: "prod"
    AllowedValues:
      - local
      - dev
      - prod

Globals:
  Function:
    Timeout: 60
    MemorySize: 512
    Runtime: nodejs18.x
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME: todos
        STAGE: !Ref Stage
  Api:
    TracingEnabled: true

Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-user-pool
      UsernameAttributes:
        - email
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true

  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Sub ${AWS::StackName}-pool-client
      GenerateSecret: false
      UserPoolId: !Ref UserPool

  IdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: !Sub ${AWS::StackName}-identity
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders: 
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  # S3 Bucket containing the frontend web page
  WebAppBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        AccessControl: PublicRead
        BucketName: !Sub app-${AWS::StackName}
        MetricsConfigurations:
          - Id: EntireBucket
        WebsiteConfiguration:
          IndexDocument: index.html
      DeletionPolicy: Retain
      UpdateReplacePolicy: Delete

  TodoApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"

  # Get all todos
  getTodos:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./functions/handlers
      Handler: getTodos.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        getTodosEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - getTodos.ts

  # Get by id
  getTodoById:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./functions/handlers
      Handler: getTodoById.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        getTodoByIdEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{id}
            Method: get
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - getTodoById.ts

  # Create todo
  createTodo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/handlers
      Handler: createTodo.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        createTodoEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - createTodo.ts

  # Update todo
  updateTodo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/handlers
      Handler: updateTodo.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        updateTodoEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: put
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - updateTodo.ts

  # Delete todo
  deleteTodo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/handlers
      Handler: deleteTodo.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        deleteTodoEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{id}
            Method: delete
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - deleteTodo.ts

  # Toggle todo
  toggleTodo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/handlers
      Handler: toggleTodo.handler
      Architectures:
        - x86_64
      Policies:
        # Give Create/Read/Update/Delete Permissions to the todos table
        - DynamoDBCrudPolicy:
            TableName: todos
      Events:
        toggleTodoEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /toggle/{id}
            Method: put
            RestApiId: !Ref TodoApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - toggleTodo.ts

  # Table
  TodoDbTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: todos
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TodoApi:
    Description: A todo app with svelte and AWS
    Value: !Sub "https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  WebsiteURL:
    Value: !GetAtt
      - WebAppBucket
      - WebsiteURL
    Description: URL for website hosted on S3
